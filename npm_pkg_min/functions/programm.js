import * as p from'@clack/prompts';export var bytesToMB=(a,A=2)=>(a/(1024*1024)).toFixed(A),parseRepositoryUrl=str=>(str.match(/https?:\/\/\S+/)||[])[0]||null,fakeSpinner=async (aA,aB)=>{const s=p.spinner();s.start(aA);await new Promise(aC=>setTimeout(aC,aB));s.stop()};export var colorizeSize=(_,B)=>{const[r,g,b]=h(B);return`\x1b[38;2;${r};${g};${b}mInstall Size: \x1b[1m${_} MB\x1b[0m`};function e(c,C){var _c=new Date(C);var d=_c.getFullYear(),E=`${_c.getMonth()+1}`.padStart(2,'0'),f=`${_c.getDate()}`.padStart(2,'0');if(c.dateFormat==='DD/MM/YYYY')return`${f}/${E}/${d}`;if(c.dateFormat==='MM/DD/YYYY')return`${E}/${f}/${d}`;if(c.dateFormat==='YYYY/MM/DD')return`${d}/${E}/${f}`}export{e as formatDate};export var iterateTable=async (_a,_b,D,_d=1,_e,F,G)=>{for(const[index,version] of _a.entries()){const _A=_d===1?index+1:_e-F+index+1;const _B=e(G,_b.time[version]);const _C=`${_b.versions[version].dist.unpackedSize+' B - '+bytesToMB(_b.versions[version].dist.unpackedSize)} MB`;D.push([_A,version,_C,_B])}return D};var h=aD=>{const aE=parseInt(aD.replace(/^#/,''),16);return[(aE>>16)&255,(aE>>8)&255,aE&255]};