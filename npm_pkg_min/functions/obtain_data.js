import a from'node:fs/promises';import {getFilePath as b} from'./get_file_path.js';var c=b('../local_data/all_ppApi_satori.json'),d=b('../local_data/all_registryApi_satori.json'),e=b('../local_data/specific_ppApi_satori.json'),f=b('../local_data/specific_registryApi_satori.json'),g=async ()=>{const A='https://raw.githubusercontent.com/AlbertLnz/pkg-phobia-cli/refs/heads/develop/utils/user_agents.txt';try{const _=await fetch(A);if(!_.ok)throw Error(`Error al obtener el archivo: ${_.statusText}`);const B=await _.text();const C=B.split('\n').filter(line=>line.trim()!==''),D=~~Math.random()*C.length;return C[D]}catch(_a){console.error('Error al obtener User-Agent:',_a);return null}},h=async _A=>{try{return JSON.parse(await a.readFile(_A,'utf8'))}catch(E){console.error('Error al leer o parsear el archivo JSON:',E);throw E}},i=async aA=>{const _b=await g();try{const aB=await fetch(aA,{headers:{'User-Agent':_b,'Content-Type':'application/json',Accept:'application/json, text/plain, */*','Accept-Language':'en-US,en;q=0.9','X-Requested-With':'XMLHttpRequest',Connection:'keep-alive','Cache-Control':'no-cache',Pragma:'no-cache'}});if(aB.ok){return await aB.json()}}catch(aC){console.error('Error al leer o parsear el archivo JSON:',aC);throw aC}};export var getBothData=async (aD=!1,_B='all',_c,_d=void 0)=>{if(aD){const aE=await i(_B==='all'?`https://packagephobia.com/v2/api.json?p=${_c}`:`https://packagephobia.com/v2/api.json?p=${_c}@${_d}`);const aF=await i(_B==='all'?`https://registry.npmjs.org/${_c}`:`https://registry.npmjs.org/${_c}/${_d}`);return{ppApi:aE,registryApi:aF}}if(!aD){const aG=_B==='all'?await h(c):await h(e),aH=_B==='all'?await h(d):await h(f);return{ppApi:aG,registryApi:aH}}};